#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass book
\begin_preamble
\date{}

\usepackage{amsfonts}

\usepackage{lettrine}
\usepackage{tikz,pgf}
\usepackage{amsfonts}
\usepackage{float}
\usepackage{graphicx}
\usepackage{titlesec}
\usepackage{blindtext}

\usepackage{listings}
\usepackage{color}
 
\definecolor{codegreen}{rgb}{0,0.6,0}
\definecolor{codegray}{rgb}{0.5,0.5,0.5}
\definecolor{codepurple}{rgb}{0.58,0,0.82}
\definecolor{backcolour}{rgb}{0.95,0.95,0.92}
 
\lstdefinestyle{java}{
    backgroundcolor=\color{backcolour},   
    commentstyle=\color{codegreen},
    keywordstyle=\color{blue},
    numberstyle=\tiny\color{codegray},
    stringstyle=\color{codepurple},
    basicstyle=\footnotesize,
    breakatwhitespace=false,         
    breaklines=true,                 
    captionpos=b,                    
    keepspaces=true,                 
    numbers=left,                    
    numbersep=5pt,                  
    showspaces=false,                
    showstringspaces=false,
    showtabs=false,                  
    tabsize=2
}

\definecolor{gray75}{gray}{0.75}


\lstset{language = Java, style=java}


\newcommand{\hsp}{\hspace{18pt}}
\titleformat{\chapter}[hang]{\Huge\bfseries}{\thechapter\hsp\textcolor{gray75}{|}\hsp}{0pt}{\Huge\bfseries}
\author{Matteo Greselin}
\title{SmartCityAdvisor\\Software Design Document\\ Version 1.0}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman cmr
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family rmdefault
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command makeindex
\paperfontsize 11
\spacing single
\use_hyperref false
\papersize a4paper
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2cm
\rightmargin 2cm
\secnumdepth 5
\tocdepth 5
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle plain
\bullet 1 0 9 -1
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tikzpicture}[remember picture,overlay] 
\backslash
node [opacity=0.1,scale=1] at (current page.center) {
\backslash
includegraphics{logopolimi}}; 
\backslash
end{tikzpicture}
\end_layout

\end_inset


\series bold
\shape smallcaps
\size giant
Integration Test Plan
\end_layout

\begin_layout Author

\shape smallcaps
Matteo Greselin - Matr.
 862908
\end_layout

\begin_layout Date

\shape smallcaps
Version 1.0
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Chapter
Introduction
\end_layout

\begin_layout Section
Revision History
\end_layout

\begin_layout Itemize
June 2016 - Integration Test Plan Document: Version 1.0
\end_layout

\begin_layout Section
Purpose and Scope
\end_layout

\begin_layout Standard
This document provide the planning for integration tests about smartCityAdvisor
 system.
 Here will be describe interfaces between the differents implementation
 present in the application.
 With this documen, the scope is provide a usefull sequence of action that
 should allow to tester to work without wasting time.
\end_layout

\begin_layout Section
Glossary
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
RASD
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
DD
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
SCA
\end_layout

\begin_layout Section
Reference Documents
\end_layout

\begin_layout Itemize
SmartCityAdvisor RASD
\end_layout

\begin_layout Itemize
SmartCityAdvisor DD
\end_layout

\begin_layout Itemize
Project Assignment provided by professors
\end_layout

\begin_layout Chapter
Integraztion Strategy
\end_layout

\begin_layout Section
Entry Criteria
\end_layout

\begin_layout Standard
As each procedure, also integration test needs some specific requirements
 that must be present before that actions descript in this document could
 be performed.
 It's mandatory to develop unit test for each class, this means that all
 classes without any test developed could not be used in the integration
 test.
 Unit tests guarantee a minimal automated testing environment, to ensure
 that each revision to the code can be tested immediately and also allow
 to simplify error-finding procedures.
\begin_inset Newline newline
\end_inset

Integration tests will follow a bottom-up approach with respect to whats
 each module will need in order to work correctly, this mean that Account
 and Data Handler will be the first one tested.
\end_layout

\begin_layout Section
Element To Be Integrated
\end_layout

\begin_layout Standard
Elements to be integrated are those individuat
\series bold
Mockito
\series default
ed in DD document (section).
 Here i reports an alphabetic list:
\end_layout

\begin_layout Enumerate
Controller:
\end_layout

\begin_deeper
\begin_layout Itemize
City Administration Communicator
\end_layout

\begin_layout Itemize
Fire Fighter Communicator
\end_layout

\begin_layout Itemize
Guest Communicator
\end_layout

\begin_layout Itemize
Hospital Communicator
\end_layout

\begin_layout Itemize
Police Station Communicator
\end_layout

\begin_layout Itemize
Public Transport Company Communicator
\end_layout

\begin_layout Itemize
User Communicator
\end_layout

\end_deeper
\begin_layout Enumerate
Model:
\end_layout

\begin_deeper
\begin_layout Itemize
Account and Data Handler
\end_layout

\begin_layout Itemize
Event Handler 
\end_layout

\begin_layout Itemize
Help Request Handler
\end_layout

\begin_layout Itemize
Map Hanlder
\end_layout

\begin_layout Itemize
Notification Handler
\end_layout

\begin_layout Itemize
Parking Handler
\end_layout

\begin_layout Itemize
Pollution Handler
\end_layout

\begin_layout Itemize
Public Transport Handler
\end_layout

\begin_layout Itemize
Queue Handler
\end_layout

\begin_layout Itemize
Traffic Situation Handler
\end_layout

\end_deeper
\begin_layout Enumerate
View:
\end_layout

\begin_deeper
\begin_layout Itemize
City Administration
\end_layout

\begin_layout Itemize
Guest
\end_layout

\begin_layout Itemize
Fire Fighters Station
\end_layout

\begin_layout Itemize
Hospital
\end_layout

\begin_layout Itemize
Police Station
\end_layout

\begin_layout Itemize
Public Transport Company
\end_layout

\begin_layout Itemize
User
\end_layout

\end_deeper
\begin_layout Standard
The integration testing involves all the code modules developed, moreover,
 the end-user application has to be tested in the various system environments,
 that are: 
\end_layout

\begin_layout Itemize
Unix based OS
\end_layout

\begin_layout Itemize
Windows systems
\end_layout

\begin_layout Itemize
Android
\end_layout

\begin_layout Itemize
iOS
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Integration Strategy
\end_layout

\begin_layout Standard
Integration strategy should be considered as a bottom-up approach with respect
 to interactions with other component.
\begin_inset Newline newline
\end_inset

In the next is proposed a schema that clarify the sequence of integration.
 The idea is that when a component for a component will be performed the
 integration test, all the component that should be considered as 'secondary'
 for it must be already integrated.
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tikzpicture}[remember picture] 
\backslash
node [scale=0.52] at (current page.center) {
\backslash
includegraphics{testing}}; 
\backslash
end{tikzpicture}
\end_layout

\end_inset


\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Software Integration Sequence
\end_layout

\begin_layout Standard
For integration tests phase is supposed that each Handler will correctly
 interact with its actuator: this mean that Map Handler will be already
 interfaced with Google Maps API, Pollution Handler receives correct data
 from pollution sensors, Traffic Situation Handler can correclty communicate
 with monitors on the street and with traffic lights and so on.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

The software integration start with the DB: it must be complete develope
 before that any test could be done.
 Then it will be integrated with Account and Data Handler, the only component
 with connection and privileges for comunicating with the DB.
 After this, could be start the real integration phase.
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

It has been choosen to start with integration between Account and Data Handler
 and Queue Handler becouse it is a component without interaction with other
 one.
 It can be conseidered as an 'insolate system': it must return correct data
 when guests or user require to see the situation in a specific hospital
 for a specific type of visit and it must provide functionality for updating
 queue coherently with normal hospital activities.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

The successive integration test will include Account and Data Handler yet,
 but with Notification Handler: the test will check if Notification Handler
 could receive different list of users for forwarding notification, this
 is one of the most important functionalities in the application and it
 is used by other Handler as Event Handler, Traffic Situation Handler, Parking
 Handler or Public Transport Handler when they need to comunicate with users.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

After it, will be done the integration test between Account And Data Handler
 and Parking Handler, this becouse Parking Handler could provade all functionali
ties only if Notification Handler will work correctly.
\begin_inset Newline newline
\end_inset

Then will be the turn of Event Handler with Account and Data Handler: it
 will allow to schedule new event, notify this action to user and provide
 information for Traffic Situation Handler so that it could manage road
 condition when event will be started
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

At this point i have to integrate Traffic Situation Handler with different
 component.
 It is the most important Handler after Account And Data Handler, and this
 hierarchy is only give by interaction with DB.
\begin_inset Newline newline
\end_inset

First integration of Traffic Situation Handler will be with Account And
 Data Handler, in order to check the correct communicaation with DB.
 Then will be done integration with Notification Handler, Map Handler, Pollution
 Handler, Public Transport Handler and Help Request Handler.
\begin_inset Newline newline
\end_inset

I want to bring out an important detail: when a new help request is insert
 into the system, it is obviousy saved in the DB but it isn't this the real
 impact of a new request for the application scope.
 The impact in the application scope is done by the possibility from Traffic
 Situation Handler to updating the traffic situation in the map and showing
 to user and guests the new accident.
 Furthermore there will be the possibilities to sending notifiacation to
 users and all rescue entities (as police, hospitals and fire fighters).
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

The last two steps, after that all the application modules will be integrated
 and will be veified that the back-end work correctly, will be integrate
 component for forwarding information to actor: for this reasons will be
 performed integration test between Model component and Controller component
 and between Controller component and View component.
\end_layout

\begin_layout Chapter
Individual Step And Description
\end_layout

\begin_layout Standard
As explain in the previous chapter, we can consider to have a step 0 in
 the integration that include the integration between Hanlers and external
 actuator ad sensors, monitors and so on.
 In particular will be foundamenta the correct integration between DB and
 Account And Data Handler.
\end_layout

\begin_layout Section
Integration Test 1
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tabular}{|p{0.3
\backslash
textwidth}||p{0.65
\backslash
textwidth}|}
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Test Case Identifier} & I1
\backslash
tabularnewline
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Test Items} & Account and Data Handler 
\backslash
& Queue Handler
\backslash
tabularnewline 
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Secondary Items} & None
\backslash
tabularnewline 
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Input Specification} & Method calls from Queue Handler
\backslash
tabularnewline 
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Output Specification} & Check that the correct methods are called
 in Account And Data Handler
\backslash
tabularnewline 
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Tests applied} & Tests done must verify that the component:
\end_layout

\begin_layout Plain Layout


\backslash
begin{itemize}
\end_layout

\begin_layout Plain Layout


\backslash
item calls correct methods for returning the required queue (with all data)
\end_layout

\begin_layout Plain Layout


\backslash
item calls correct methods for updating an indicated queue
\end_layout

\begin_layout Plain Layout


\backslash
end{itemize}
\end_layout

\begin_layout Plain Layout


\backslash
tabularnewline 
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\end_layout

\begin_layout Plain Layout


\backslash
end{tabular}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Integration Test 2
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tabular}{|p{0.3
\backslash
textwidth}||p{0.65
\backslash
textwidth}|}
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Test Case Identifier} & I2
\backslash
tabularnewline
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Test Items} & Account And Data Handler and Notification Handler
\backslash
tabularnewline 
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Secondary Items} & None
\backslash
tabularnewline 
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Input Specification} & Method calls from Notification Handler
\backslash
tabularnewline 
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Output Specification} & Check that the correct methods are called
 in Account And Data Handler
\backslash
tabularnewline 
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Tests applied} & Tests done must verify that the component:
\end_layout

\begin_layout Plain Layout


\backslash
begin{itemize}
\end_layout

\begin_layout Plain Layout


\backslash
item calls correct methods for extracting and returning lists of users that
 must receive a notification
\end_layout

\begin_layout Plain Layout


\backslash
item calls correct methods for forwarding the notification to assigned set
 of users or single users (for example during a car park reservation confirm)
\end_layout

\begin_layout Plain Layout


\backslash
item calls correct methods for checking if the notification's sender has
 privileges in order to perform that action
\end_layout

\begin_layout Plain Layout


\backslash
item calls correct methods for requiring administration feedback before
 forward a notification (if necessary)
\end_layout

\begin_layout Plain Layout


\backslash
end{itemize}
\end_layout

\begin_layout Plain Layout


\backslash
tabularnewline 
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\end_layout

\begin_layout Plain Layout


\backslash
end{tabular}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Integration Test 3
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tabular}{|p{0.3
\backslash
textwidth}||p{0.65
\backslash
textwidth}|}
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Test Case Identifier} & I3
\backslash
tabularnewline
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Test Items} & Account and Data Handler 
\backslash
& Parking Handler Handler
\backslash
tabularnewline 
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Secondary Items} & Notification Handler
\backslash
tabularnewline 
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Input Specification} & Method calls from Parking Handler
\backslash
tabularnewline 
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Output Specification} & Check that the correct methods are called
 in Account And Data Handler
\backslash
tabularnewline 
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Tests applied} & Tests done must verify that the component:
\end_layout

\begin_layout Plain Layout


\backslash
begin{itemize}
\end_layout

\begin_layout Plain Layout


\backslash
item calls correct methods for updating parking car availability when someone
 go in or out from it.
\end_layout

\begin_layout Plain Layout


\backslash
item call correct methods for activate Notification Handler if user has
 performed a reservation in a specific cars park (always after have performed
 the updatig).
\end_layout

\begin_layout Plain Layout


\backslash
end{itemize}
\end_layout

\begin_layout Plain Layout


\backslash
tabularnewline 
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\end_layout

\begin_layout Plain Layout


\backslash
end{tabular}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Integration Test 4
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tabular}{|p{0.3
\backslash
textwidth}||p{0.65
\backslash
textwidth}|}
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Test Case Identifier} & I4
\backslash
tabularnewline
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Test Items} & Account and Data Handler 
\backslash
& Event Handler
\backslash
tabularnewline 
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Secondary Items} & Notification Handler
\backslash
tabularnewline 
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Input Specification} & Method calls from Event Handler
\backslash
tabularnewline 
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Output Specification} & Check that the correct methods are called
 in Account And Data Handler
\backslash
tabularnewline 
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Tests applied} & Tests done must verify that the component:
\end_layout

\begin_layout Plain Layout


\backslash
begin{itemize}
\end_layout

\begin_layout Plain Layout


\backslash
item calls correct methods for saving new event after that administration
 have scheduled it
\end_layout

\begin_layout Plain Layout


\backslash
item calls correct methods for sending notification to all user in order
 to remind them the events
\end_layout

\begin_layout Plain Layout


\backslash
end{itemize}
\end_layout

\begin_layout Plain Layout


\backslash
tabularnewline 
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\end_layout

\begin_layout Plain Layout


\backslash
end{tabular}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Integration Test 5
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tabular}{|p{0.3
\backslash
textwidth}||p{0.65
\backslash
textwidth}|}
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Test Case Identifier} & I5
\backslash
tabularnewline
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Test Items} & Traffic Situation Handler 
\backslash

\backslash
& Notification Handler
\backslash
tabularnewline 
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Secondary Items} & None
\backslash
tabularnewline 
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Input Specification} & Method calls from duringTraffic Situation
 Handler
\backslash
tabularnewline 
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Output Specification} & Check that the correct methods are called
 in Notification Handler
\backslash
tabularnewline 
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Tests applied} & Tests done must verify that the component:
\end_layout

\begin_layout Plain Layout


\backslash
begin{itemize}
\end_layout

\begin_layout Plain Layout


\backslash
item calls correct methods for sendig notification to users when pollution
 sensors releve something
\end_layout

\begin_layout Plain Layout


\backslash
item calls correct methods for sendig notification to users when is happened
 an accidents
\end_layout

\begin_layout Plain Layout


\backslash
item calls correct methods for sendig notification to users when there is
 some problem with public transport
\end_layout

\begin_layout Plain Layout


\backslash
item calls correct methods for sendig notification to users when an event
 block some streets  
\end_layout

\begin_layout Plain Layout


\backslash
end{itemize}
\end_layout

\begin_layout Plain Layout


\backslash
tabularnewline 
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\end_layout

\begin_layout Plain Layout


\backslash
end{tabular}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Integration Test 6
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tabular}{|p{0.3
\backslash
textwidth}||p{0.65
\backslash
textwidth}|}
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Test Case Identifier} & I6
\backslash
tabularnewline
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Test Items} & Traffic Situation Handler 
\backslash
& Map Handler
\backslash
tabularnewline 
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Secondary Items} & None
\backslash
tabularnewline 
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Input Specification} & Methods call from Traffic Situation Handler
\backslash
tabularnewline 
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Output Specification} & Check that correct methods are called in
 Map Handler
\backslash
tabularnewline 
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Tests applied} & Tests done must verify that the component:
\end_layout

\begin_layout Plain Layout


\backslash
begin{itemize}
\end_layout

\begin_layout Plain Layout


\backslash
item calls correct methods in roder to integrate Google Map API with traffic
 situation information so all user and guest could see the real time traffic
 situation.
\end_layout

\begin_layout Plain Layout


\backslash
item calls correct methods in order to mantain application's maps as current
 as possible
\end_layout

\begin_layout Plain Layout


\backslash
end{itemize}
\end_layout

\begin_layout Plain Layout


\backslash
tabularnewline 
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\end_layout

\begin_layout Plain Layout


\backslash
end{tabular}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Integration Test 7
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tabular}{|p{0.3
\backslash
textwidth}||p{0.65
\backslash
textwidth}|}
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Test Case Identifier} & 
\backslash
tabularnewline
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Test Items} & Traffic Handler 
\backslash
& Account And Data Handler
\backslash
tabularnewline 
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Other Stubs} & Map Handler, Pollution Handler 
\backslash
tabularnewline 
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Input Specification} & Method calls from Traffic Situation Handler
\backslash
tabularnewline 
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Output Specification} & Check that the correct methods are called
 in Account And Data Handler
\backslash
tabularnewline 
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Tests applied} & Tests done must verify that the component:
\end_layout

\begin_layout Plain Layout


\backslash
begin{itemize}
\end_layout

\begin_layout Plain Layout


\backslash
item call correct methods for updating Map Handler, if necessary
\end_layout

\begin_layout Plain Layout


\backslash
item call correct methods for storing an high pollution level
\end_layout

\begin_layout Plain Layout


\backslash
end{itemize}
\end_layout

\begin_layout Plain Layout


\backslash
tabularnewline 
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\end_layout

\begin_layout Plain Layout


\backslash
end{tabular}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Integration Test 8
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tabular}{|p{0.3
\backslash
textwidth}||p{0.65
\backslash
textwidth}|}
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Test Case Identifier} & 
\backslash
tabularnewline
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Test Items} & Traffic Handler 
\backslash
& Pollution Handler
\backslash
tabularnewline 
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Secondary Items} & None
\backslash
tabularnewline 
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Input Specification} & Method calls from Traffic Situation Handler
\backslash
tabularnewline 
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Output Specification} & Check that the correct methods are called
 in Pollution Handler
\backslash
tabularnewline 
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Tests applied} & Tests done must verify that the component:
\end_layout

\begin_layout Plain Layout


\backslash
begin{itemize}
\end_layout

\begin_layout Plain Layout


\backslash
item call correct methods for receivig data about pollution situation from
 polution sensors
\end_layout

\begin_layout Plain Layout


\backslash
end{itemize}
\end_layout

\begin_layout Plain Layout


\backslash
tabularnewline 
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\end_layout

\begin_layout Plain Layout


\backslash
end{tabular}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Integration Test 9
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tabular}{|p{0.3
\backslash
textwidth}||p{0.65
\backslash
textwidth}|}
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Test Case Identifier} & 
\backslash
tabularnewline
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Test Items} & Traffic Situation Handler 
\backslash
& Help Request Handler
\backslash
tabularnewline 
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Secondary Items} & Notification Hanlder, Map Handler
\backslash
tabularnewline 
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Input Specification} & Method calls from Help Request Handler
\backslash
tabularnewline 
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Output Specification} & Check that the correct methods are called
 in Traffic Situation Handler
\backslash
tabularnewline 
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Tests applied} & Tests done must verify that the component:
\end_layout

\begin_layout Plain Layout


\backslash
begin{itemize}
\end_layout

\begin_layout Plain Layout


\backslash
item calls correct methods for activating traffic deviation, if necessary
\end_layout

\begin_layout Plain Layout


\backslash
item calls correct methods for indicating new accindents in the maps
\end_layout

\begin_layout Plain Layout


\backslash
item calls correct methods for requiring the activation of all functionalities
 related to new accidents, as notification to users
\end_layout

\begin_layout Plain Layout


\backslash
item calls correct methods for advicing Police Station, Hospital and Fire
 Fighters near the accident, in order to be sure that everybody know what
 is happenend
\end_layout

\begin_layout Plain Layout


\backslash
end{itemize}
\end_layout

\begin_layout Plain Layout


\backslash
tabularnewline 
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\end_layout

\begin_layout Plain Layout


\backslash
end{tabular}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Integration Test 10
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tabular}{|p{0.3
\backslash
textwidth}||p{0.65
\backslash
textwidth}|}
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Test Case Identifier} & 
\backslash
tabularnewline
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Test Items} & Traffic Situation Handler 
\backslash
& Public Transport Company Handler
\backslash
tabularnewline 
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Secondary Items} & Notification Handler
\backslash
tabularnewline 
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Input Specification} & Method calls from Public Transport Company
 Handler 
\backslash
tabularnewline 
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Output Specification} & Check that the correct methods are called
 in Traffic Situation Handler
\backslash
tabularnewline 
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Tests applied} & Tests done must verify that the component:
\end_layout

\begin_layout Plain Layout


\backslash
begin{itemize}
\end_layout

\begin_layout Plain Layout


\backslash
item call correct method in order to forward notification to notification
 handler, after city administration approval
\end_layout

\begin_layout Plain Layout


\backslash
item call correct method for updating transport line's scheduling
\end_layout

\begin_layout Plain Layout


\backslash
item call correct method for constantly updating public transports position
 
\end_layout

\begin_layout Plain Layout


\backslash
end{itemize}
\end_layout

\begin_layout Plain Layout


\backslash
tabularnewline 
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\end_layout

\begin_layout Plain Layout


\backslash
end{tabular}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Integration Test 11
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tabular}{|p{0.3
\backslash
textwidth}||p{0.65
\backslash
textwidth}|}
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Test Case Identifier} & I11
\backslash
tabularnewline
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Test Items} & Model Component 
\backslash
& Controller Component
\backslash
tabularnewline 
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Secondary Items} & All Module Item must be already integrated
\backslash
tabularnewline 
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Input Specification} & Method calls from Model Component
\backslash
tabularnewline 
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Output Specification} & Check that the correct methods are called
 in Controller Component
\backslash
tabularnewline 
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Tests applied} & Tests done must verify that the component:
\end_layout

\begin_layout Plain Layout


\backslash
begin{itemize}
\end_layout

\begin_layout Plain Layout


\backslash
item calls
\end_layout

\begin_layout Plain Layout


\backslash
end{itemize}
\end_layout

\begin_layout Plain Layout


\backslash
tabularnewline 
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\end_layout

\begin_layout Plain Layout


\backslash
end{tabular}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Integration Test 12
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tabular}{|p{0.3
\backslash
textwidth}||p{0.65
\backslash
textwidth}|}
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Test Case Identifier} & I12
\backslash
tabularnewline
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Test Items} & Controller Component 
\backslash
& View Component
\backslash
tabularnewline 
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Secondary Items} & Module's items and Controller Component must be
 already integrated
\backslash
tabularnewline 
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Input Specification} & Method calls from Controller Component
\backslash
tabularnewline 
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Output Specification} & Check that the correct methods are called
 in View Component
\backslash
tabularnewline 
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Tests applied} & The tests done must verify that:
\end_layout

\begin_layout Plain Layout


\backslash
begin{itemize}
\end_layout

\begin_layout Plain Layout


\backslash
item guest communicator component call the correct method for:
\end_layout

\begin_layout Plain Layout


\backslash
subitem -showing traffic situation and requireing best way
\end_layout

\begin_layout Plain Layout


\backslash
subitem -showing events already scheduled by city administration
\end_layout

\begin_layout Plain Layout


\backslash
subitem -showing hospital queue
\end_layout

\begin_layout Plain Layout


\backslash
subitem -showing parking situation
\end_layout

\begin_layout Plain Layout


\backslash
subitem -showing public transport position
\end_layout

\begin_layout Plain Layout


\backslash
item user communicator component call the correct method for:
\end_layout

\begin_layout Plain Layout


\backslash
subitem -showing notification when someone send something
\end_layout

\begin_layout Plain Layout


\backslash
subitem -showing form for reserve a car park
\end_layout

\begin_layout Plain Layout


\backslash
item city administration communicator component call the correct method
 for:
\end_layout

\begin_layout Plain Layout


\backslash
subitem -showing form for schedule new events
\end_layout

\begin_layout Plain Layout


\backslash
subitem -showing all notification that require an approvation
\end_layout

\begin_layout Plain Layout


\backslash
item police station communicator, hospital communicator and fire fighters
 communivator component call the correct method for:
\end_layout

\begin_layout Plain Layout


\backslash
subitem -showing the form for insert a new help request
\end_layout

\begin_layout Plain Layout


\backslash
item public trasport company communicator component call the correct method
 for:
\end_layout

\begin_layout Plain Layout


\backslash
subitem -showing the form for send special notification to user, but only
 after city administration approval
\end_layout

\begin_layout Plain Layout


\backslash
end{itemize}
\end_layout

\begin_layout Plain Layout


\backslash
tabularnewline 
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\end_layout

\begin_layout Plain Layout


\backslash
end{tabular}
\end_layout

\end_inset


\end_layout

\begin_layout Chapter
quipment Required
\series bold
Unit Test
\end_layout

\begin_layout Standard
In order to perform integration test, have been used some tools presented
 during lectures.
 These tools have been integrated with manual, as ultimate testing resource.
 
\end_layout

\begin_layout Itemize

\series bold
\bar under
Mockito
\series default
\bar default
 has been used to test interatction with external service, as Google APIs.
 It also allow to isolate dependencies.
\end_layout

\begin_layout Itemize

\series bold
\bar under
Arquillian
\series default
\bar default
 has an important role during the integration between system and DB: it
 is very helpful in order to understand if the database works well.
\end_layout

\begin_layout Itemize
When i need to simulate a fulfilled form or an information overload i might
 use
\series bold
 
\bar under
Jmeter
\series default
\bar default
 that allow to have consistency and fault tolerance tested.
 For these reasons it should also used to check if the system can work well
 under strain or if a big number of incoming requests may cause a failure.
\end_layout

\begin_layout Itemize
For most simple component with few interactions, i have used normal 
\series bold
Unit Test 
\series default
becouse they not required complex tool for testing
\end_layout

\begin_layout Chapter
Program Stubs and Test Data Required
\end_layout

\begin_layout Standard
In this chapter i bring out some test procedure that have the scope to verify
 that each integration test is done correctly.
 Each TP will be structured with a short description about what the simulation
 includes andwhich integration test should be already done if i want that
 the TP could be performed in the right way.
\end_layout

\begin_layout Section
Integration Test Procedure TP1
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tabular}{|p{0.3
\backslash
textwidth}||p{0.65
\backslash
textwidth}|}
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Test Procedure ID} & TP1
\backslash
tabularnewline
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Purpose} & This test procedure simulate a precise situation in order
 to check the correct integration between different component.
 Will be necessary simulate a guest as actor that will check the queue situation
 in a specifi hospital
\backslash
tabularnewline 
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Procedure Steps} & I0 (DB/Account and Data Handler) and I1  must
 be done
\backslash
tabularnewline 
\end_layout

\begin_layout Plain Layout


\backslash
hline
\end_layout

\begin_layout Plain Layout


\backslash
end{tabular}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Integration Test Procedure TP2
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tabular}{|p{0.3
\backslash
textwidth}||p{0.65
\backslash
textwidth}|}
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Test Procedure ID} & TP2
\backslash
tabularnewline
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Purpose} & This test procedure simulate a precise situation in order
 to check the correct integration between different component.
 Will be necessary simulate a user as actor that will check the car park
 availability in a specific car parking and he will decide to reserve on
 park
\backslash
tabularnewline 
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Procedure Steps} & I0, I2 and I3 must be done
\backslash
tabularnewline
\end_layout

\begin_layout Plain Layout


\backslash
hline
\end_layout

\begin_layout Plain Layout


\backslash
end{tabular}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Integration Test Procedure TP3
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tabular}{|p{0.3
\backslash
textwidth}||p{0.65
\backslash
textwidth}|}
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Test Procedure ID} & TP3
\backslash
tabularnewline
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Purpose} & This test procedure simulate a precise situation in order
 to check the correct integration between different component.
 Will be necessary simulate city administration that insert a new event.
 This mean that users will receive notification and data will be update.
\backslash
tabularnewline 
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Procedure Steps} & I0, I2 and I4 must be done
\backslash
tabularnewline 
\end_layout

\begin_layout Plain Layout


\backslash
hline
\end_layout

\begin_layout Plain Layout


\backslash
end{tabular}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Integration Test Procedure TP4
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tabular}{|p{0.3
\backslash
textwidth}||p{0.65
\backslash
textwidth}|}
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Test Procedure ID} & TP4
\backslash
tabularnewline
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Purpose} & This test procedure simulate a precise situation in order
 to check the correct integration between different component.
 Will be necessary simulate that an event is started and user must be advice
 about each temporary change.
 Here will be involved also Traffic Situation Handler and Map Handler if
 we want to provide a real time information for our users
\backslash
tabularnewline 
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Procedure Steps} & I0, I2, I4, I5, I6 and I7 must be done
\backslash
tabularnewline 
\end_layout

\begin_layout Plain Layout


\backslash
hline
\end_layout

\begin_layout Plain Layout


\backslash
end{tabular}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Integration Test Procedure TP5
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tabular}{|p{0.3
\backslash
textwidth}||p{0.65
\backslash
textwidth}|}
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Test Procedure ID} & TP5
\backslash
tabularnewline
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Purpose} & This test procedure simulate a precise situation in order
 to check the correct integration between different component.
 Will be necessary simulate the block of car traffic due to pollution levels
\backslash
tabularnewline 
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Procedure Steps} & I0, I2, I5, I6, I7, I8 must be done
\backslash
tabularnewline 
\end_layout

\begin_layout Plain Layout


\backslash
hline
\end_layout

\begin_layout Plain Layout


\backslash
end{tabular}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Integration Test Procedure TP6
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tabular}{|p{0.3
\backslash
textwidth}||p{0.65
\backslash
textwidth}|}
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Test Procedure ID} & TP6
\backslash
tabularnewline
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Purpose} & This test procedure simulate a precise situation in order
 to check the correct integration between different component.
 Will be necessary simulate the integration of Public Transport Situation
 in the map and also simulate an attempt by Public Transport Company Administrat
ion to send an email that must be verify from City Administration
\backslash
tabularnewline 
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Procedure Steps} & I0, I2, I5, I6, I7 and I10 must be done
\backslash
tabularnewline 
\end_layout

\begin_layout Plain Layout


\backslash
hline
\end_layout

\begin_layout Plain Layout


\backslash
end{tabular}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Integration Test Procedure TP7
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tabular}{|p{0.3
\backslash
textwidth}||p{0.65
\backslash
textwidth}|}
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Test Procedure ID} & TP7
\backslash
tabularnewline
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Purpose} & This test procedure simulate a precise situation in order
 to check the correct integration between different component.
 Will be necessary simulate a new help request captured by hospital, police
 station or fire fighter station, with respect to who will be contacted
 as first from the plece where the accident is happened
\backslash
tabularnewline 
\end_layout

\begin_layout Plain Layout


\backslash
hline  
\backslash
textbf{Procedure Steps} & I0, I2, I4, I5, I6, I7 and I9 must be done
\backslash
tabularnewline 
\end_layout

\begin_layout Plain Layout


\backslash
hline
\end_layout

\begin_layout Plain Layout


\backslash
end{tabular}
\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Appendix
\end_layout

\begin_layout Section
Used Tools
\end_layout

\begin_layout Standard
In order to create this document i have used the following tools:
\end_layout

\begin_layout Enumerate

\series bold
Lyx
\series default
 for writing the pdf
\end_layout

\begin_layout Enumerate

\series bold
VisualParadigm
\series default
10 Community Edition for creating diagrams
\end_layout

\begin_layout Section
Time Spent
\end_layout

\begin_layout Standard
For drafting this document i have spent about 15 hours.
\end_layout

\end_body
\end_document
