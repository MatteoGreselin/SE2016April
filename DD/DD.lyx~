#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass book
\begin_preamble
\date{}
\usepackage{lettrine}
\usepackage{tikz,pgf}
\usepackage{amsfonts}
\usepackage{float}
\usepackage{graphicx}
\usepackage{titlesec}
\usepackage{blindtext}

\usepackage{listings}
\usepackage{color}
 
\definecolor{codegreen}{rgb}{0,0.6,0}
\definecolor{codegray}{rgb}{0.5,0.5,0.5}
\definecolor{codepurple}{rgb}{0.58,0,0.82}
\definecolor{backcolour}{rgb}{0.95,0.95,0.92}
 
\lstdefinestyle{java}{
    backgroundcolor=\color{backcolour},   
    commentstyle=\color{codegreen},
    keywordstyle=\color{blue},
    numberstyle=\tiny\color{codegray},
    stringstyle=\color{codepurple},
    basicstyle=\footnotesize,
    breakatwhitespace=false,         
    breaklines=true,                 
    captionpos=b,                    
    keepspaces=true,                 
    numbers=left,                    
    numbersep=5pt,                  
    showspaces=false,                
    showstringspaces=false,
    showtabs=false,                  
    tabsize=2
}

\definecolor{gray75}{gray}{0.75}


\lstset{language = Java, style=java}


\newcommand{\hsp}{\hspace{18pt}}
\titleformat{\chapter}[hang]{\Huge\bfseries}{\thechapter\hsp\textcolor{gray75}{|}\hsp}{0pt}{\Huge\bfseries}
\author{Matteo Greselin}
\title{SmartCityAdvisor\\Software Design Document\\ Version 1.0}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman cmr
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family rmdefault
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command makeindex
\paperfontsize 11
\spacing single
\use_hyperref false
\papersize a4paper
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2cm
\topmargin 1.5cm
\secnumdepth 5
\tocdepth 5
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle plain
\bullet 1 0 9 -1
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tikzpicture}[remember picture,overlay] 
\backslash
node [opacity=0.1,scale=1] at (current page.center) {
\backslash
includegraphics{logopolimi}}; 
\backslash
end{tikzpicture}
\end_layout

\end_inset


\series bold
\shape smallcaps
\size giant
Design Document
\end_layout

\begin_layout Author

\shape smallcaps
Matteo Greselin - Matr.
 862908
\end_layout

\begin_layout Date

\shape smallcaps
Version 1.0
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Chapter*
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{chapter}{1 Introduction}
\end_layout

\end_inset

 1 Introduction
\end_layout

\begin_layout Section*
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{section}{1.1 Purpose}
\end_layout

\end_inset

1.1 Purpose
\end_layout

\begin_layout Standard
This document is required in order to provide more details about the application
 design : which components are necessary, which architecture has been choosen
 and why, how components are integrated each other, which should be the
 interface that i want propose to guest/user and so on.
 For bring out these things, DD will use what has been described in the
 RASD document: this means that there is a strictly relation between what
 are the application requirement and which choises will be done.
\end_layout

\begin_layout Section*
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{section}{1.2 Scope}
\end_layout

\end_inset

1.2 Scope
\end_layout

\begin_layout Section*
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{section}{1.3 Glossary}
\end_layout

\end_inset

1.3 Definitions, Acronyms, Abbreviations
\end_layout

\begin_layout Itemize
RASD: Requirements Specication Analysis Document
\end_layout

\begin_layout Itemize
DD: Design Document
\end_layout

\begin_layout Itemize
MVC: Model Control View
\end_layout

\begin_layout Itemize
FIFO: First In First Out, it's a policy applied to the queue managing.
\end_layout

\begin_layout Itemize
PaaS: Platform As A Service
\end_layout

\begin_layout Itemize
SOA: Service Oriented Architecture
\end_layout

\begin_layout Itemize
DB: DataBase
\end_layout

\begin_layout Itemize
DBMS : Data Base Management System
\end_layout

\begin_layout Itemize
JEE : Java Enterprise Edition
\end_layout

\begin_layout Section*
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{section}{1.4 Reference Documents}
\end_layout

\end_inset

1.5 Reference Documents
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lettrine{I}{n}
\end_layout

\end_inset

 this document we refer to following documentation: 
\end_layout

\begin_layout Itemize
IEEE Std 1016-2009 (Revision of IEEE Std 1016-1998), Standard for Information
 Technology Systems, Design Software, Design Descriptions 
\end_layout

\begin_layout Itemize
International Standard ISO/IEC/IEE 42010 - First edition 2011-12-01 - Systems
 and software engineering Architecture Description 
\end_layout

\begin_layout Itemize
Template For The Design Document provided by prof.
 Di Nitto 
\end_layout

\begin_layout Itemize
RASD of smartiCityAdvisorÂ® created me
\end_layout

\begin_layout Section*
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{section}{1.5 Document Structure}
\end_layout

\end_inset

1.4 Document Structure
\end_layout

\begin_layout Standard
The document will be structured in 6 chapter.
 After this one, that is an introduction chapter, the document will be structure
d as following:
\end_layout

\begin_layout Itemize
In the second chapter there will be the architectural design, with a detailed
 description about componets that will interact in order to perfom the service
\end_layout

\begin_layout Itemize
In the third chapter i will bring out some of main algoritms that the system
 will manage.
 This section will be done using pseudocode and diagrams
\end_layout

\begin_layout Itemize
In the fourth chapter will be presented a grafical explanation abount experience
 of application usage
\end_layout

\begin_layout Itemize
Fifth and sixth chapter will be conclusions and requirements traceability
\end_layout

\begin_layout Chapter*
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{chapter}{2 Architectural Design}
\end_layout

\end_inset

2 Architectural Design
\end_layout

\begin_layout Standard
In the next sections will be explained all choise about archirectural decision.
 I will describe components, their integration in the system and how they
 will interact between them.
 A section will be dedicated to more algorithmic parts of system as traffic
 situation or parking reservation; for these parts will be used pseudocode
 in order to allow to each reader to understand the system that i want propose,
 without the necessity of informatic knowledge.
\end_layout

\begin_layout Section*
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{section}{2.1 System Components}
\end_layout

\end_inset

2.1 System Components
\end_layout

\begin_layout Standard
The idea is to use the pattern Model - View - Controller, in the following
 subsection will be present main modules of each component.
 
\end_layout

\begin_layout Itemize
In the model there will be all the handlers (for the queue, for the traffic
 situation, for the account...)
\end_layout

\begin_layout Itemize
The controller will have the task to forward information between view and
 model, in realtion with the type of account
\end_layout

\begin_layout Itemize
The view will differenciate what each person could see on his device, with
 respect to the type of log in, if it has been done, otherwise will be proposed
 guest view ad default view) 
\end_layout

\begin_layout Subsection*
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{subsection}{2.1.1 Model Module}
\end_layout

\end_inset

2.2.1 Model Module
\end_layout

\begin_layout Subsubsection*
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{subsubsection}{2.1.1.1 Account And Data Handler}
\end_layout

\end_inset

2.2.1.5 Account And Data Handler
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lettrine{T}{his}
\end_layout

\end_inset

 is the main handler: it is directly connected with DB and for this reason
 each action that willl required an access to DB will be interfaced with
 this handler.
 It manage data and user accounts and this includes also the functionality
 'profile managing'.
 This handler will be used also as final protection against attacks versus
 DB.
\end_layout

\begin_layout Subsubsection*
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{subsubsection}{2.1.1.2 Events Handler}
\end_layout

\end_inset

2.1.1.2 Events Handler
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lettrine{T}{o}
\end_layout

\end_inset

 this handler could have access the City Administration with privileges,
 in order to add/remove/edit event scheduling and Users or Guests, in order
 to see events scheduled.
 This component will also manage (if necessary) the event for its entire
 period: it will need to be intefaced with Traffic Managment Handler and
 Notification Handler.
 Obviously, in order to save data, this component must be interfaced also
 with Account And Data Handler.
\end_layout

\begin_layout Subsubsection*
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{subsubsection}{2.1.1.3 Help Request Handler}
\end_layout

\end_inset

2.1.1.3 Help Request Handler
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lettrine{T}{his}
\end_layout

\end_inset

 component will manage external request, it could be used by Police Stations,
 Fire Fighters Stations and Hospital when an external emergency call arrive.
 It will insert the new accident in the system and for this reason it will
 need to be interfaced with the Account and Data Handler
\end_layout

\begin_layout Subsubsection*
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{subsubsection}{2.1.1.4 Map Handler}
\end_layout

\end_inset

2.1.1.4 Map Handler
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lettrine{I}{t}
\end_layout

\end_inset

 have the task to provide an usable map to the application : it will received
 data by Google Maps API and it will prepare them in order to make the usable
 for Traffic Situation Handler
\end_layout

\begin_layout Subsubsection*
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{subsubsection}{2.1.1.5 Notification Handler}
\end_layout

\end_inset

2.1.1.5 Notification Handler
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lettrine{T}{his}
\end_layout

\end_inset

 handler will manage the entire group of notification: 
\end_layout

\begin_layout Itemize
notification attempts by Public Transport Company
\end_layout

\begin_layout Itemize
feedback by City Administration about notification attempts
\end_layout

\begin_layout Itemize
notification sended by City administration
\end_layout

\begin_layout Itemize
notifications send to Users
\end_layout

\begin_layout Subsubsection*
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{subsubsection}{2.1.1.6 Parking Handler}
\end_layout

\end_inset

2.1.1.6 Parking Handler
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lettrine{T}{his}
\end_layout

\end_inset

 compontent will receive data from each car park in the city : each car
 that will go in or out by that car park will pass on a sensor that will
 send a specific signal to the handler.
 It will need to be interfaced with Account And Data Handler in order to
 update data and it could be used by guest for seeing parks availability
 and by users for seeing parks available or reserve a car parks
\end_layout

\begin_layout Subsubsection*
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{subsubsection}{2.1.1.7 Pollution Handler}
\end_layout

\end_inset

2.1.1.7 Pollution Handler
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lettrine{T}{his}
\end_layout

\end_inset

 handler will be used only for receiving data by CO
\size tiny
2 
\size default
sensors and elaborate them with respect to prefixed values.
 If CO
\size tiny
2 
\size default
levels will be to higher, a signal will be send to Traffic Situation Handler
 in order to block the car entries in the city.
\end_layout

\begin_layout Subsubsection*
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{subsubsection}{2.1.1.8 Pubblic Transport Handler}
\end_layout

\end_inset

2.1.1.8 Pubblic Transport Handler
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lettrine{T}{his}
\end_layout

\end_inset

 handler will be used for receiving GPS of Public Tranport vehicles and
 forward them to Traffic Situation Handler.
 Users And Guest could see these GPS position and Public Transport Company
 could manage transport line (for example add new line or remove it, insert
 information about momentanely technical failure and so on...).
\end_layout

\begin_layout Subsubsection*
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{subsubsection}{2.1.1.9 Queue Handler}
\end_layout

\end_inset

2.1.1.9 Queue Handler
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lettrine{T}{his}
\end_layout

\end_inset

 component will manage the queue in the hospital, it could be access with
 privileges by hospital and without privileges by Guests and Users.
 More ditails abount algorithms that control this handler will be provide
 in chapter 3.
\end_layout

\begin_layout Subsubsection*
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{subsubsection}{2.1.1.10 Traffic Handler}
\end_layout

\end_inset

2.1.1.10 Traffic Handler
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lettrine{I}{t}
\end_layout

\end_inset

 will be interfaced with:
\end_layout

\begin_layout Itemize
Accounts And Data Handler in order to receive data about new accidents and
 update the traffic situation
\end_layout

\begin_layout Itemize
Maps handler in order to intergat traffic situation with map;
\end_layout

\begin_layout Itemize
Pullution Handler in order to activate the block of the traffic with relation
 to CO
\size tiny
2
\size scriptsize
 
\size default
levels 
\end_layout

\begin_layout Itemize
Traffic LIght and Main Monitors at the sides of streets in order to manage
 traffic in the better way
\end_layout

\begin_layout Standard
Users and Guest could be access to this component for viewing the traffic
 situation in real time and City Administion could deactivate automatic
 traffic managing anf perform if manually.
\end_layout

\begin_layout Subsection*
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{subsection}{2.1.2 View Moduel}
\end_layout

\end_inset

2.2.2 View Moduel
\end_layout

\begin_layout Subsubsection*
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{subsubsection}{2.1.2.1 Guest View}
\end_layout

\end_inset

2.2.2.1 Guest View
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lettrine{T}{his}
\end_layout

\end_inset

 view will provide all basic functionalities: traffic situation, parking
 availability, hospital queues situation, event scheduled.
 For reach this set of views is sufficient have a device and an internet
 connection.
 It doesn't need any type of registration but it doesn't permit to use the
 entire set of functionalities of application.
 
\begin_inset Newline newline
\end_inset

For more details about difference between guest functionalities and user
 functionalitis might be consulted RASD.
\end_layout

\begin_layout Subsubsection*
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{subsubsection}{2.1.2.2 User View}
\end_layout

\end_inset

2.2.2.2 User View
\end_layout

\begin_layout Standard
This view perform the complete experience that application wants to provide
 to users because it permits to use all functionalitis.
 In order to use this set of views is necessary an easy and quick registration.
 The functionalities that a user could be use with respect to guests are
 :
\end_layout

\begin_layout Itemize
receive notification about accidents in real time
\end_layout

\begin_layout Itemize
receive notification about event scheduled
\end_layout

\begin_layout Itemize
receive notification about unexpected traffic car block (due to pollution)
\end_layout

\begin_layout Itemize
reserve parking
\end_layout

\begin_layout Subsubsection*
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{subsubsection}{2.2.2.3 City Administration View}
\end_layout

\end_inset

2.2.2.3 City Administration View
\end_layout

\begin_layout Standard
This view could be see only with log in as superuser 'City Administration'.
 With this view, Administration employees could manage notification by Public
 Transport Company, could send notification to user, could take the control
 of traffic managing or scheduled new events.
\end_layout

\begin_layout Subsubsection*
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{subsubsection}{2.1.2.4 Hospital View}
\end_layout

\end_inset

2.2.2.4 Hospital View
\end_layout

\begin_layout Standard
This view could be see only with log in as superuser 'Hospital'.
 It will permit to manage the hospital profile, in order to edit hospital
 specialization, and it will permit to see all new help requests insert
 in the system in the last 60minutes and, if necessary, to add/remove an
 help request.
\end_layout

\begin_layout Subsubsection*
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{subsubsection}{2.1.2.5 Police Station and Fire Fighters
 Station View}
\end_layout

\end_inset

2.2.2.5 Police Station and Fire Fighters Station View
\end_layout

\begin_layout Standard
This view could be see only with log in as superuser 'Police Station' or
 'Fire Fighter Station'.
 It will permit to see all new help requests insert in the system in the
 last 60minutes and, if necessary, to add/remove an help request.
\end_layout

\begin_layout Subsubsection*
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{subsubsection}{2.1.2.6 Public Transport Company View}
\end_layout

\end_inset

2.2.2.6 Public Transport Company View
\end_layout

\begin_layout Standard
This view could be see only with log in as superuser 'Public Transport Company'.
 It will permit to edit transport line route or direclty delete a trasport
 line if it has been deleted.
 It will permit also to try to send notification to user (for technical
 information or news) but this type of notification must receive a positive
 feedback by City Administration, in order to reduce unuseful message on
 citizen devices.
\end_layout

\begin_layout Subsection*
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{subsection}{2.1.3 Control Module}
\end_layout

\end_inset

2.2.3 Control Module
\end_layout

\begin_layout Standard
This module represents the part of the system that is in contact with the
 users and guest.
 It is the connection between the view module, loaded on the user's devices,
 and the model module, that is loaded on the server.
 This part too has to be loaded and performed by a dedicated server area.
\end_layout

\begin_layout Section*
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{section}{2.2 Component View}
\end_layout

\end_inset

2.2 Component View
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tikzpicture}[remember picture] 
\backslash
node [scale=0.62] at (current page.center) {
\backslash
includegraphics{ComponentView}}; 
\backslash
end{tikzpicture}
\end_layout

\end_inset


\end_layout

\begin_layout Section*
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{section}{2.3 Deployment View}
\end_layout

\end_inset

2.3 Deployment View
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tikzpicture}[remember picture] 
\backslash
node [scale=0.47] at (current page.center) {
\backslash
includegraphics{DeploymentView}}; 
\backslash
end{tikzpicture}
\end_layout

\end_inset


\end_layout

\begin_layout Section*
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{section}{2.4 Runtime View}
\end_layout

\end_inset

2.4 Runtime View
\end_layout

\begin_layout Standard
In this section will be present some view about possible usage of application.
 The objective is to bring out the interaction between components presented
 in this DD.
 For this reason will be used the concepts of the sequence diagram of RASD
 and will be modify with the DD specification.
\end_layout

\begin_layout Section*
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{section}{2.5 Component Interface}
\end_layout

\end_inset

2.5 Component Interface
\end_layout

\begin_layout Standard
In this section will be presented the main methods that each Handler will
 perform, whit received and returned, if present, variables.
\end_layout

\begin_layout Subsection*
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{subsection}{2.5.1 Account And Data Situation Handler}
\end_layout

\end_inset

2.5.1 Account And Data Situation Handler
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{lstlisting}
\end_layout

\begin_layout Plain Layout

public   
\end_layout

\begin_layout Plain Layout


\backslash
end{lstlisting}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{subsection}{2.5.2 Events Handler}
\end_layout

\end_inset

2.5.2 Events Handler
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{lstlisting}
\end_layout

\begin_layout Plain Layout

public   
\end_layout

\begin_layout Plain Layout


\backslash
end{lstlisting}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{subsection}{2.5.3 Help Requests Handler}
\end_layout

\end_inset

2.5.3 Help Requests Handler
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{lstlisting}
\end_layout

\begin_layout Plain Layout

public   
\end_layout

\begin_layout Plain Layout


\backslash
end{lstlisting}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{subsection}{2.5.4 Map Handler}
\end_layout

\end_inset

2.5.4 Map Handler
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{lstlisting}
\end_layout

\begin_layout Plain Layout

public   
\end_layout

\begin_layout Plain Layout


\backslash
end{lstlisting}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{subsection}{2.5.5 Notifications Handler}
\end_layout

\end_inset

2.5.5 Notifications Handler
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{lstlisting}
\end_layout

\begin_layout Plain Layout

public   
\end_layout

\begin_layout Plain Layout


\backslash
end{lstlisting}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{subsection}{2.5.6 Parking Handler}
\end_layout

\end_inset

2.5.6 Parking Handler
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{lstlisting}
\end_layout

\begin_layout Plain Layout

public   
\end_layout

\begin_layout Plain Layout


\backslash
end{lstlisting}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{subsection}{2.5.7 Pollution Handler}
\end_layout

\end_inset

2.5.7 Pollution Handler
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{lstlisting}
\end_layout

\begin_layout Plain Layout

public   
\end_layout

\begin_layout Plain Layout


\backslash
end{lstlisting}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{subsection}{2.5.8 Public Transport Handler}
\end_layout

\end_inset

2.5.8 Public Transport Handler
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{lstlisting}
\end_layout

\begin_layout Plain Layout

public   
\end_layout

\begin_layout Plain Layout


\backslash
end{lstlisting}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{subsection}{2.5.9 Queue Handler}
\end_layout

\end_inset

2.5.9 Queue Handler
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{lstlisting}
\end_layout

\begin_layout Plain Layout

public   
\end_layout

\begin_layout Plain Layout


\backslash
end{lstlisting}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{subsection}{2.5.10 Traffic Handler}
\end_layout

\end_inset

2.5.10 Traffic Handler
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{lstlisting}
\end_layout

\begin_layout Plain Layout

public   
\end_layout

\begin_layout Plain Layout


\backslash
end{lstlisting}
\end_layout

\end_inset


\end_layout

\begin_layout Section*
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{section}{2.6 Other Design Choises}
\end_layout

\end_inset

2.6 Other Design Choises
\end_layout

\begin_layout Subsection*
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{subsection}{2.6.1 Architectural Styles And Patterns}
\end_layout

\end_inset

2.6 Architectural Styles And Patterns
\end_layout

\begin_layout Subsubsection*
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{subsubsection}{2.6.1.1 MVC Pattern}
\end_layout

\end_inset

2.6.1.1 MVC Pattern
\end_layout

\begin_layout Subsection*
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{subsection}{2.6.2 Technical Solutions}
\end_layout

\end_inset

2.6.2 Technical Solutions
\end_layout

\begin_layout Chapter*
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{chapter}{3.Algorithms Design}
\end_layout

\end_inset

3.
 Algorithms Design
\end_layout

\begin_layout Section*
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{section}{3.1 Queue Algorithms}
\end_layout

\end_inset

3.1 Queue Algorithms
\end_layout

\begin_layout Standard
The algorithms that manages the hospitals queues is very basic.
 In the DB will be stored data with the following schema: 
\end_layout

\begin_layout Itemize
first value in the record will be the hospital;
\end_layout

\begin_layout Itemize
second value of the record will be the specialization, this means for which
 pathology i'm requirinq a medical visit;
\end_layout

\begin_layout Itemize
third value will be a variable that will indicate the number of person that
 are waiting for it.
\end_layout

\begin_layout Standard
When someone will arrive in a hospital he/she could retire the ticket with
 his/her queue number, after selecting the right hospital specialization.
 Then the system will update the third value of the record reguarding the
 selected hospital specialization.
 When someone will be called in the ambulatory, nurse will inform system
 that will reduce to one that queue.
 
\end_layout

\begin_layout Section*
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{section}{3.2 New Help Request Algorithms}
\end_layout

\end_inset

3.2 New Help Request Algorithms
\end_layout

\begin_layout Standard
As explain in RASD i assume that when there is a big accident somone call
 police ,hospital or fire fighter.
 Usually there is an operator that answer to help requests and must advice
 his/her collegues in order to permit a rapid rescue.
 The addition of new help request to the system could be perform in the
 following way:
\end_layout

\begin_layout Itemize
When he/she answer to help request he/she could see on the right side of
 monitor the help requests received in the last 60 minutes
\end_layout

\begin_layout Itemize
If any request corrispond to the actual one, operator will add the new request
\end_layout

\begin_layout Itemize
He/she must take note about main information (place of accident, people
 injured, dangerous situation...)
\end_layout

\begin_layout Itemize
The information will be send directly to collegues, but also to system 
\end_layout

\begin_layout Itemize
System will check if there will be some similar record in the DB, giving
 following priority:
\end_layout

\begin_deeper
\begin_layout Itemize
System will exclude all help request that have been included more that 20
 minutes ago
\end_layout

\begin_layout Itemize
System will exclude all requests not included in a radius of 150m
\end_layout

\begin_layout Itemize
System will exclude all requests with different data (different number of
 car involved, different number of injured person
\end_layout

\begin_layout Standard
If some of the previous discrimination will create an ambiguity, human decision
 will be required.
\end_layout

\end_deeper
\begin_layout Standard
When the rescue will be complete, the operator could remove the help request
 from the system if other operators have not already done it.
\end_layout

\begin_layout Section*
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{section}{3.3 Traffic Managing Algorithms}
\end_layout

\end_inset

3.3 Traffic Managing Algorithms
\end_layout

\begin_layout Standard
We assume that city were SmartCityAdvisor will be used will be divided in
 areas.
 The number of them will be variable with respect to the expansion of the
 city.
 When a pollution sensor will releve a level of pollution higher than the
 fixed level, it will send a precise signal to the Pollution Handler.
 Then Pollution Handler will forwar to Traffic Situation Handler data that
 will conatin:
\end_layout

\begin_layout Itemize
ID about zone where sensor has been activated;
\end_layout

\begin_layout Itemize
Pollution level, that will be a number between 1 and 10 that will indicate
 the danger of situation.
\end_layout

\begin_layout Standard
When Traffic Situation Handler receives this data will start its tasks:
\end_layout

\begin_layout Itemize
It will start to send information to the interested areas, then to the adjacents
 one and so on
\end_layout

\begin_layout Itemize
It will send information to main monitors at the side of street if Pollution
 Level will be higher or equal than 6 ;
\end_layout

\begin_layout Itemize
It will start to manage traffic light in order to reduce (initially) and
 block (as final situation) the traffic throgh the city until the CO2 level
 will be higher that 2;
\end_layout

\begin_layout Itemize
It will send notification to all users where will be indicate the zone where
 the sensor has been activated and an aproximatively time before that the
 entries could be reopen.
\end_layout

\begin_layout Standard
A different situation will be perform if an events has been scheduled: in
 this case must be blocked all streed interested by the event.
\begin_inset Newline newline
\end_inset

We assume that Event Handler will send data to Traffic Situation Handler
 each day: it will send all event scheduled that will happen in 7 days,
 in 3 days, tomorrow and today.
 Notification to users will be send only for the tomorrow events and in
 the other case citizen will be informed with main monitors at the side
 of streets.
 In the period of event, Traffic Situation Handler will use traffic light
 in order to block cars, all main monitor in the interested zone will explain
 to citizens what is happened and, if necessary, City Administration could
 interact with Traffic Situation Handler for manually decision.
\end_layout

\begin_layout Section*
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{section}{3.4 Car Parks Reservation Algorithms}
\end_layout

\end_inset

3.4 Car Parks Reservation Algorithms
\end_layout

\begin_layout Standard
A user could check availability of parking but also reserve a car park.
 The algrithm could be describe in the following way:
\end_layout

\begin_layout Itemize
User choose in which parking want to reserve a parking place and he/she
 will indicate the reservation time (15minutes, 30minutes, 1hour...)
\end_layout

\begin_layout Itemize
Data will be send to Parking Handler that will reduce the number of free
 car park and will assign to one a QR code.
\end_layout

\begin_layout Itemize
The same QR code will be send to user
\end_layout

\begin_layout Itemize
When the QR code will be received by user, the resarvation cuould be considered
 finish and the reservation timer will start.
\end_layout

\begin_layout Itemize
When the user will arrive to the parking, he/she will show to a QR reader
 the code and, if the timer will not arrive to the end, the entry will be
 allowed.
\end_layout

\begin_layout Itemize
The payment will be perform in an automatic cash before leave the parking,
 that will be controlled by registration car number: when a car arrive the
 registration car number will be save in the DB with the entry hours and
 when someone want leave the parking, he/she will insert their regirstration
 car number in order to calculate the parking tima and consequently the
 price.
\end_layout

\begin_layout Itemize
In case of reservation will be apply an additional cost
\end_layout

\begin_layout Chapter*
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{chapter}{4.User Interface Design}
\end_layout

\end_inset

4.
 User Interface Design
\end_layout

\begin_layout Standard
The best way in order to explain the experience that system will propose
 to all is the use of graphic mokeUps.
 In the following section will be presented the main page that guests, users
 and superusers will see when they will open my application.
 Each page will be proposed in a desktop version in the left side and in
 a smartphone version in the right side.
\end_layout

\begin_layout Section*
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{section}{4.1 Guest Experience }
\end_layout

\end_inset

4.1 Guest Experience
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tikzpicture}[remember picture] 
\backslash
node [scale=0.55] at (current page.center) {
\backslash
includegraphics{home}}; 
\backslash
end{tikzpicture}
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tikzpicture}[remember picture] 
\backslash
node [scale=0.55] at (current page.center) {
\backslash
includegraphics{hospitalqueue}}; 
\backslash
end{tikzpicture}
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tikzpicture}[remember picture] 
\backslash
node [scale=0.55] at (current page.center) {
\backslash
includegraphics{parksituation}}; 
\backslash
end{tikzpicture}
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tikzpicture}[remember picture] 
\backslash
node [scale=0.55] at (current page.center) {
\backslash
includegraphics{eventscheduled}}; 
\backslash
end{tikzpicture}
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tikzpicture}[remember picture] 
\backslash
node [scale=0.55] at (current page.center) {
\backslash
includegraphics{transportsituation}}; 
\backslash
end{tikzpicture}
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tikzpicture}[remember picture] 
\backslash
node [scale=0.55] at (current page.center) {
\backslash
includegraphics{registration}}; 
\backslash
end{tikzpicture}
\end_layout

\end_inset


\end_layout

\begin_layout Section*
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{section}{4.2 User Experience}
\end_layout

\end_inset

4.2 User Experience
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tikzpicture}[remember picture] 
\backslash
node [scale=0.55] at (current page.center) {
\backslash
includegraphics{login}}; 
\backslash
end{tikzpicture}
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tikzpicture}[remember picture] 
\backslash
node [scale=0.55] at (current page.center) {
\backslash
includegraphics{homelogin}}; 
\backslash
end{tikzpicture}
\end_layout

\end_inset


\end_layout

\begin_layout Section*
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{section}{4.3 Superuser Experience }
\end_layout

\end_inset

4.3 Superuser Experience
\end_layout

\begin_layout Standard
SuperUsers experience will be proposed only in desktop version becouse might
 be difficult to manage a city by a smartphone and we want only the best
 for citizens.
 
\end_layout

\begin_layout Subsection*
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{subsection}{4.3.1 City Administration }
\end_layout

\end_inset

4.3.1 City Administration
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tikzpicture}[remember picture] 
\backslash
node [scale=0.48] at (current page.center) {
\backslash
includegraphics{city1}}; 
\backslash
end{tikzpicture}
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tikzpicture}[remember picture] 
\backslash
node [scale=0.48] at (current page.center) {
\backslash
includegraphics{city2}}; 
\backslash
end{tikzpicture}
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tikzpicture}[remember picture] 
\backslash
node [scale=0.48] at (current page.center) {
\backslash
includegraphics{city3}}; 
\backslash
end{tikzpicture}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{subsection}{4.3.2 Hospital }
\end_layout

\end_inset

4.3.2 Hospital
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tikzpicture}[remember picture] 
\backslash
node [scale=0.48] at (current page.center) {
\backslash
includegraphics{hospital1}}; 
\backslash
end{tikzpicture}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{subsection}{4.3.3 Police Stations and Fire Fighters Stations
 }
\end_layout

\end_inset

4.3.3 Police Stations and Fire Fighters Stations
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tikzpicture}[remember picture] 
\backslash
node [scale=0.48] at (current page.center) {
\backslash
includegraphics{helpRequest}}; 
\backslash
end{tikzpicture}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{subsection}{4.3.4 Public Transport Company}
\end_layout

\end_inset

4.3.4 Public Transport Company
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tikzpicture}[remember picture] 
\backslash
node [scale=0.48] at (current page.center) {
\backslash
includegraphics{transportCompany}}; 
\backslash
end{tikzpicture}
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tikzpicture}[remember picture] 
\backslash
node [scale=0.48] at (current page.center) {
\backslash
includegraphics{transportCompany2}}; 
\backslash
end{tikzpicture}
\end_layout

\end_inset


\end_layout

\begin_layout Chapter*
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{chapter}{5.
 Requirements Traceability}
\end_layout

\end_inset

5.
 Requirements Traceability
\end_layout

\begin_layout Section*
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{section}{5.1 Sign Up}
\end_layout

\end_inset

5.1 Sign Up
\end_layout

\begin_layout Description
[R1] Guest must no be already registered
\end_layout

\begin_layout Description
[R2] Guest must provide some personal information : Name, Surname, Age,
 eMail, Username, Password
\end_layout

\begin_layout Description
[R3] System will send an eMail to the indicate address in order to activate
 the account
\end_layout

\begin_layout Description
[R4] System will ask to insert password two times: the two password must
 be identical.
\end_layout

\begin_layout Standard
All these requirements are satified by Account and Data Handler, it will
 be interfaced with Notification Handler in order to send confirmation e-mail
 to Guests right after registration has been done.
 
\end_layout

\begin_layout Section*
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{section}{5.2 Types of Possible Log In And Functionalities}
\end_layout

\end_inset

5.2 Types of Possible Log In And Functionalities
\end_layout

\begin_layout Subsection*
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{subsection}{5.2.1 Log In}
\end_layout

\end_inset

5.2.1 Log In
\end_layout

\begin_layout Description
[R1] User must insert username and password
\end_layout

\begin_layout Description
[R2] If he/she wants, he/she could use the email address as username
\end_layout

\begin_layout Description
[R3] If necessary, will be avaible a 'recovery password' process that will
 use the indicated email
\end_layout

\begin_layout Standard
These requirements is performed by Account and Data Handler that will be
 connected with DB and in this way it could be check if insert username
 and password will have any correspondece.
\end_layout

\begin_layout Subsection*
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{subsection}{5.2.2 Profile Managing}
\end_layout

\end_inset

5.2.2 Profile Managing
\end_layout

\begin_layout Description
[R1] User could change email address, but only one time.
\end_layout

\begin_layout Description
[R2] User could change password one time at week
\end_layout

\begin_layout Description
[R3] User could select which notification he/she wants recive (traffic,
 accidents, special notification, events....).
\end_layout

\begin_layout Description
[R4] User could delete his/her account in each moment
\end_layout

\begin_layout Standard
Requirements about profile managing are performed by Account and Data Handler,
 becouse they require the access to DB in order to update data.
\end_layout

\begin_layout Subsection*
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{subsection}{5.2.3 Administation Functionalities }
\end_layout

\end_inset

5.2.3 Administation Functionalities
\end_layout

\begin_layout Description
[R1] Administration must manage the entire application, manually or autimaticall
y
\end_layout

\begin_layout Description
[R2] Administration must provide at least 3 people in order to provide a
 quickly response if it is necessary
\end_layout

\begin_layout Description
[R3] Administration could accept or refuse Public Transport Company notification
\end_layout

\begin_layout Description
[R4] Administration could see usage report, as user access, user registred,
 accedets done in a period and so on.
\end_layout

\begin_layout Description
[R5] It must provide manteinance, in order to guarantee the service
\end_layout

\begin_layout Description
[R6] It is the only that can insert programmed event, as manifestations,
 road works, Vips visits, ecological days...
 
\end_layout

\begin_layout Standard
These one is perfomed with the usage of Notification Hanlder (in order to
 create, delete, modify notication or accept/refuse Public Transport Company
 notification), Events Handler (in order to provide all information about
 scheduling events), Traffic Situation Handler (in order to manage manually
 traffic situation, if necessary), Account and Data Handler (in order to
 see report or manage any data)
\end_layout

\begin_layout Subsection*
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{subsection}{5.2.4 Hospital Functionalities}
\end_layout

\end_inset

5.2.4 Hospital Functionalities
\end_layout

\begin_layout Description
[R1] Funcitonality could be done manually by an operator on automatically
 by an information system
\end_layout

\begin_layout Description
[R2] When a person take a tiket for the queue, the queue for that specific
 medical visit will be update automatically 
\end_layout

\begin_layout Description
[R3] When a medical visit starts, the waiting ticked will be read electronically
 and this operation will update the queue for that specific visit
\end_layout

\begin_layout Description
[R4] When Hospital recive a call for an accident on the street, it will
 be registred and automatically insert in the system
\end_layout

\begin_layout Description
[R5] If the indicated position of the accident is already present in the
 system, there will not be any updating.
 This means that probably police station has already update the event.
\end_layout

\begin_layout Description
[R6] When the medical staff return from the accident, it will be registred
 and automatically insert in the system
\end_layout

\begin_layout Description
[R7] If the indicated position of the accident is not present in the system,
 there will not be any updating.
 This means that probably police station has already update the solve accident.
\end_layout

\begin_layout Description
[R8] Hospital structure could change the specializations present in it,
 in case someone of them is closed 
\end_layout

\begin_layout Standard
These requirement is obtained, after a log in as Hospital superuser, with
 Queue Handler, Help Request Handler and Account and Data Handler (if will
 be necessary modify Hospital information or specializations)
\end_layout

\begin_layout Subsection*
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{subsection}{5.2.5 Public Transport Company Functionalities}
\end_layout

\end_inset

5.2.5 Public Transport Company Functionalities
\end_layout

\begin_layout Description
[R1] It must constantly provide the position of each vehicle
\end_layout

\begin_layout Description
[R2] It must send special notification reguarding company, as strike or
 own broken vehicle or line interrupted, but after Administration approvation
\end_layout

\begin_layout Description
[R3] It could manage the service offered : add new transports line, remove
 old transports line, change transports route and so on.
\end_layout

\begin_layout Standard
These requirements is managed by Public Transport Handler, Notificaiton
 Handler and Account And Data Handler.
 Public Transport Handler will have the task to farward information to Traffic
 Situation Handler that will integrate information about transport vehicles
 with the other one
\end_layout

\begin_layout Subsection*
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{subsection}{5.2.6 Police Station And Fire Fighters Station
 Functionalities}
\end_layout

\end_inset

5.2.6 Police Station And Fire Fighters Station Functionalities
\end_layout

\begin_layout Description
[R1] Funcitonality could be done manually by an operator on automatically
 by an information system
\end_layout

\begin_layout Description
[R2] When Police Station recives a call for an accident on the street, it
 will be registred and automatically insert in the system
\end_layout

\begin_layout Description
[R3] If the indicated position of the accident is already present in the
 system, there will not be any updating.
 This means that probably an hospital has already answer to the calling.
\end_layout

\begin_layout Description
[R4] When the police staff return from the accident, it will be registred
 and automatically insert in the system
\end_layout

\begin_layout Description
[R5] If the indicated position of the accident is not present in the system,
 there will not be any updating.
 This means that probably an hospital has already update the solve accident.
\end_layout

\begin_layout Standard
These requirements are satified by Help Request Handler.
 Police Stations and Fire Fighters Stations could only receive, add, edit
 and delete this type of request.
\end_layout

\begin_layout Subsection*
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{subsection}{5.2.7 Guests and Users Funcitonalities}
\end_layout

\end_inset

5.2.7 Guests and Users Funcitonalities
\end_layout

\begin_layout Description
[R1] Guests can see traffic situation, queue situation, parking availabilities
 and public transport situation
\end_layout

\begin_layout Description
[R2] User can perform each functionalities that can perform a simple guest
\end_layout

\begin_layout Description
[R3] User can receive notification by City Administration and, after positive
 feedback, also by Public Transport Company
\end_layout

\begin_layout Description
[R4] User can reserve a car park, he/she will indicate place and how long
 reserves it.
\end_layout

\begin_layout Description
[R5] User could manage his/her profile data
\end_layout

\begin_layout Standard
These requirements are handler with different component : Notification Handler,
 Traffic Situation Handler, Queue Handler, Parking Handler, Account And
 Data Handler.
 Obviously each handler will return to person only the view permitted by
 own privileges.
 (for example a guest could not reserve a parking)
\end_layout

\begin_layout Chapter*
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{chapter}{6.Used Tools and Work Timing}
\end_layout

\end_inset

6.Used Tools and Work Timing
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lettrine{F}{or }
\end_layout

\end_inset

create this documet we have used:
\end_layout

\begin_layout Description
LYX to create a well-formatted document
\end_layout

\begin_layout Description
moqups.com to create the UI sketches;
\end_layout

\begin_layout Standard

\series bold
VisualParadigm10 Community Edition
\series default
 to create Sequence Diagrams and State Charts;
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lettrine{E}{xtra }
\end_layout

\end_inset

documentation consulted:
\end_layout

\begin_layout Itemize
Business Process Model and Notation (BPMN) - Version 2.0 provided by OMG
 (Object Management Group)
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lettrine{R}{eguarding }
\end_layout

\end_inset

the drafting of this document, i have spent about hours.
 Problably, during a team group, this thin will be the same for each component
 becouse the time that normally is used for coordinate the work is very
 relevant.
\end_layout

\end_body
\end_document
